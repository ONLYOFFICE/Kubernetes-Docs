apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.docservice.name }}
  labels:
    app: {{ .Values.docservice.app }}
spec:
  replicas: {{ .Values.docservice.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.docservice.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.docservice.app }}
    spec:
      # topologySpreadConstraints:
      # - maxSkew: 1
        # topologyKey: doks.digitalocean.com/node-pool
        # whenUnsatisfiable: DoNotSchedule
        # labelSelector:
          # matchLabels:
            # app: docservice
      volumes:
        - name: {{ .Values.pvc.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.pvc.name }}
        - name: ds-license
          secret:
            secretName: license
      containers:
        - name: proxy
          image: {{ .Values.docservice.proxyContainerImage }}
          ports:
            - containerPort: {{ .Values.docservice.proxyContainerPort }}
          envFrom:
          - configMapRef:
              name: {{ .Values.docservice.configMap }}
          volumeMounts:
          - name: {{ .Values.pvc.name }}
            mountPath: {{ .Values.pvc.mountPath }}

        - name: docservice
          image: {{ .Values.docservice.docserviceContainerImage }}
          ports:
            - containerPort: {{ .Values.docservice.docserviceContainerPort }}
          env:
          - name: DB_PWD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.connections.dbHost }}
                {{ if eq .Values.connections.dbHost "postgresql" }}
                key: postgresql-password
                {{ else if eq .Values.connections.dbHost "mysql" }}
                key: mysql-root-password
                {{ else if eq .Values.connections.dbHost "mariadb" }}
                key: mariadb-root-password
                {{ end }}
          - name: AMQP_PWD
            valueFrom:
              secretKeyRef:
                name: rabbitmq
                key: rabbitmq-password
          envFrom:
          - secretRef:
              name: jwt
          - configMapRef:
              name: {{ .Values.docservice.configMap }}
          volumeMounts:
          - name: {{ .Values.pvc.name }}
            mountPath: {{ .Values.pvc.mountPath }}
          - name: ds-license
            mountPath: /var/www/onlyoffice/Data
            readOnly: true
