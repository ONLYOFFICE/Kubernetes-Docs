{{- if .Values.tests.enabled }}
apiVersion: v1
kind: Pod
metadata:
  name: {{ include "ds.resources.name" (list . .Values.commonNameSuffix "test-ds") }}
  namespace: {{ include "ds.namespace" . | quote }}
  labels:
    app.kubernetes.io/component: test-ds
    {{- if .Values.commonLabels }}
    {{- include "ds.labels.commonLabels" . | trim | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation
    {{- if or .Values.commonAnnotations .Values.tests.annotations }}
    {{- $dictValue := default .Values.commonAnnotations .Values.tests.annotations }}
    {{- include "ds.annotations.commonAnnotations" ( dict "keyName" $dictValue "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  serviceAccountName: {{ include "ds.serviceAccountName" . }}
  {{- if .Values.podSecurityContext.enabled }}
  securityContext: {{- toYaml .Values.podSecurityContext.tests | nindent 4 }}
  {{- end }}
  {{- if or .Values.tests.customPodAntiAffinity .Values.tests.podAffinity .Values.tests.nodeAffinity }}
  affinity:
    {{- with .Values.tests.customPodAntiAffinity }}
    podAntiAffinity:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- with .Values.tests.podAffinity }}
    podAffinity:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- with .Values.tests.nodeAffinity }}
    nodeAffinity:
      {{- toYaml . | nindent 6 }}
    {{- end }}
  {{- end }}
  {{- if or .Values.nodeSelector .Values.tests.nodeSelector }}
  nodeSelector: {{ toYaml (default .Values.nodeSelector .Values.tests.nodeSelector) | nindent 4 }}
  {{- end }}
  {{- if or .Values.tolerations .Values.tests.tolerations }}
  tolerations: {{ toYaml (default .Values.tolerations .Values.tests.tolerations) | nindent 4 }}
  {{- end }}
  {{- if .Values.imagePullSecrets }}
  imagePullSecrets:
  - name: {{ .Values.imagePullSecrets }}
  {{- end }}
  containers:
  - name: test-ds
    image: {{ .Values.tests.image.repository }}:{{ .Values.tests.image.tag }}
    imagePullPolicy: {{ .Values.tests.image.pullPolicy }}
    {{- if .Values.tests.containerSecurityContext.enabled }}
    securityContext: {{- omit .Values.tests.containerSecurityContext "enabled" | toYaml | nindent 6 }}
    {{- end }}
    resources: {{ toYaml .Values.tests.resources | nindent 6 }}
    env:
    - name: DB_PWD
      valueFrom:
        secretKeyRef:
          name: {{ template "ds.db.secretName" . }}
          key: {{ .Values.connections.dbSecretKeyName }}
    - name: AMQP_PWD
      valueFrom:
        secretKeyRef:
          name: {{ template "ds.rabbitmq.secretName" . }}
          key: {{ .Values.connections.amqpSecretKeyName }}
    - name: REDIS_SERVER_PWD
      valueFrom:
        secretKeyRef:
          name: {{ template "ds.redis.secretName" . }}
          key: {{ .Values.connections.redisSecretKeyName }}
    {{- if eq .Values.connections.redisConnectorName "ioredis" }}
    - name: REDIS_SENTINEL_PWD
      valueFrom:
        secretKeyRef:
          name: {{ template "ds.redis.sentinel.secretName" . }}
          key: {{ .Values.connections.redisSentinelSecretKeyName }}
    {{- end }}
    - name: STORAGE_S3
      value: {{ .Values.persistence.storageS3 | quote }}
    - name: DS_ADDRESS
      value: {{ include "ds.resources.name" (list . .Values.commonNameSuffix "docservice") }}
    envFrom:
    - configMapRef:
        name: {{ include "ds.resources.name" (list . .Values.commonNameSuffix "documentserver") }}
    volumeMounts:
    {{- if not .Values.persistence.storageS3 }}
    - name: ds-files
      mountPath: /ds/test/App_Data/cache/files
    {{- end }}
    - name: test-ds
      mountPath: /scripts/test_ds.py
      subPath: test_ds.py
    command: ['python', '/scripts/test_ds.py']
  volumes:
  {{- if not .Values.persistence.storageS3 }}
  - name: ds-files
    persistentVolumeClaim:
      claimName: {{ template "ds.pvc.name" . }}
  {{- end }}
  - name: test-ds
    configMap:
      name: {{ include "ds.resources.name" (list . .Values.commonNameSuffix "test-ds") }}
      defaultMode: 0755
  restartPolicy: Never
{{- end }}
